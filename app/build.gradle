/*apply from :'config.gradle'*/
//./gradlew app:dependencies
apply plugin: 'com.android.application'

apply plugin: 'org.greenrobot.greendao'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'service_agency'

apply plugin: 'com.huawei.agconnect'

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    dexOptions {
        //使用增量模式构建
        incremental true
        javaMaxHeapSize "8g"
        jumboMode true
        preDexLibraries = true
        //线程数
        threadCount = 8
        maxProcessCount 8
    }
    defaultConfig {
        applicationId "com.stratagile.pnrouter"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode getSelfDefinedVersion("code") + 10
        versionName "1.4.4"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "APIVERSION", "\"1\""
//        buildConfigField "String", "USER_AGENT", "\"OWA\""
        buildConfigField "String", "USER_AGENT", "\"lws-minimal\""
        buildConfigField "String", "SIGNAL_URL", "\"https://47.96.76.184:18006/\""
        buildConfigField "String", "SIGNAL_CDN_URL", "\"https://47.96.76.184:18006/\""
        multiDexKeepProguard file("multidexKeep.pro")
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        resConfigs "en", "zh-rCN"
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "590fe4b2a75e8f169cab50fd", //JPush 上注册的包名对应的 Appkey.
//                JPUSH_APPKEY : "cdd9a878c1d5af95023a9088", //JPush 测试 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
    flavorDimensions "implementation"
    productFlavors {
        normal {
            dimension "implementation"
            buildConfigField 'boolean', 'isGooglePlay', 'false'
        }
        googleplay {
            dimension "implementation"
            buildConfigField 'boolean', 'isGooglePlay', 'true'
        }
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        absolutePaths false
        lintConfig file("lint.xml")
        showAll true
        textReport true
        xmlReport true
        htmlReport true
        textOutput file("lint-report.txt")
        htmlOutput file("lint-report.html")
        xmlOutput file("lint-report.xml")
    }
    packagingOptions {
        exclude 'google/protobuf/compiler/plugin.proto'
        exclude 'google/protobuf/any.proto'
        exclude 'google/protobuf/api.proto'
        exclude 'google/protobuf/descriptor.proto'
        exclude 'google/protobuf/duration.proto'
        exclude 'google/protobuf/empty.proto'
        exclude 'google/protobuf/field_mask.proto'
        exclude 'google/protobuf/source_context.proto'
        exclude 'google/protobuf/struct.proto'
        exclude 'google/protobuf/timestamp.proto'
        exclude 'google/protobuf/type.proto'
        exclude 'google/protobuf/wrappers.proto'
        exclude 'scalapb/scalapb.proto'
        exclude 'org/apache/commons/imaging/formats/xpm/rgb.txt'
        exclude 'org/xbill/DNS/windows/DNSServer.properties'
        exclude 'org/xbill/DNS/windows/DNSServer_de.properties'
        exclude 'org/xbill/DNS/windows/DNSServer_fr.properties'
        exclude 'org/xbill/DNS/windows/DNSServer_ja.properties'
        exclude 'org/xbill/DNS/windows/DNSServer_pl.properties'
        exclude 'library.properties'
        exclude 'reflect.properties'
        exclude 'rootdoc.txt'
        exclude '.readme'
        exclude 'LICENSE.txt'
        exclude 'LICENSE-2.0.txt'
        exclude 'APK LICENSE.txt'
    }
    signingConfigs {
        release {
            storeFile file(rootProject.getRootDir().getAbsolutePath() + "/qlink.jks");

            //签名文件路径，我是放到项目中了
            //签名密码
            storePassword "qlinkdapp"
            //别名
            keyAlias "qlink"
            //别名密码
            keyPassword "qlinkdapp"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            buildConfigField "boolean", "LOG_DEBUG", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets{
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
        normal {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }

        googleplay {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
}
greendao {
    schemaVersion 104//数据库版本号
    daoPackage 'com.stratagile.pnrouter.db'//设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    //targetGenDirTest：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}
repositories {
//    maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
    jcenter()
    google()//新增这一行
    flatDir {
        dirs 'libs' //就是你放aar的目录地址
    }
    google()
//    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://dl.bintray.com/drummer-aidan/maven" }
    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
    maven { url 'https://maven.google.com' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:support-dynamic-animation:$supportVersion"
    implementation 'com.jakewharton:butterknife:9.0.0-rc2'
    kapt 'com.jakewharton:butterknife-compiler:9.0.0-rc2'
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //谷歌的kotlin扩展库
//    implementation 'androidx.core:core-ktx:0.3'

    //kotlin版本的brah

    //    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.pawegio.kandroid:kandroid:0.8.7@aar'
    implementation 'com.google.dagger:dagger:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.alibaba:fastjson:1.2.37'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation files('libs/klogLibrary-release.aar')

    /*implementation 'com.github.qlcchain:qlc-java-sdk:1.8'*/

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'com.google.protobuf:protobuf-java:3.4.0'
    implementation 'com.google.protobuf:protoc:3.1.0'

    //    compile 'com.safframework.log:saf-log:1.5.1'

    //    implementation project(':saf-log')
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation 'com.yanzhenjie:permission:1.1.2'

    //    implementation project(':RxTools-library')
    implementation project(':menu')

    //implementation project(':easeui')
    implementation project(':library')
    implementation project(':brvaLibrary')
    /*implementation project(':appTox')*/
    implementation project(':zxing')
    implementation project(':picture_library')
    implementation project(':zbar')
    implementation project(':qmui')
    implementation project(':autosize')
    implementation project(':FloatBalllibrary')
    implementation project(':swipemenulib')
    implementation project(':refresh-header')
    implementation project(':refresh-layout')
    normalImplementation project(':smspermission')
    //api project(':eamil')
    implementation 'org.greenrobot:greendao:3.2.2'

    //图片加载框架
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'
    implementation files('libs/org.apache.http.legacy.jar')
    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.0.2'
    implementation "android.arch.lifecycle:runtime:$arch_version"
    implementation "android.arch.lifecycle:common-java8:$arch_version"
    kapt "android.arch.lifecycle:compiler:$arch_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"

    //implementation 'com.github.joshjdevl.libsodiumjni:libsodium-jni-aar:2.0.1-SNAPSHOT'

    //implementation 'com.noober.floatmenu:common:1.0.4'
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'

    /* implementation 'com.lzy.widget:view-core:0.1.5'*/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.20'
    implementation files('libs/wowoviewpager.aar')

    /* implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.2.6'
                                                                        implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.6'*/
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation files('libs/MiPush_SDK_Client_3_6_12.jar')
    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation files('libs/javabase64-1.3.1.jar')
    implementation files('libs/jcore-android-2.1.6-google_play.jar')
    implementation files('libs/jpush-android-3.3.9-google_play.jar')
    implementation files('libs/thumbnailator-0.4.5.jar')

    //compile 'com.github.hackware1993:MagicIndicator:1.5.0'
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'com.github.mailhu:islands:2.0'
    implementation 'com.iyao.easyat:easyat:1.0.0'


    //Adapter终结者 地址：https://github.com/mcxtzhang/all-base-adapter
    compile 'com.github.mcxtzhang:all-base-adapter:V1.5.2'

    //15.0.1

    /*implementation ('com.google.apis:google-api-services-gmail:v1-rev32-1.20.0')*/

    //没有使用特殊Header，可以不加这行
    implementation files('libs/AesCipher.jar')
    implementation files('libs/google-api-services-gmail-v1-rev20190602-1.30.1.jar')
    implementation files('libs/google-api-client-1.30.2.jar')
    implementation files('libs/google-oauth-client-jetty-1.30.3.jar')
    implementation files('libs/google-oauth-client-java6-1.30.1.jar')
    implementation files('libs/google-http-client-jackson2-1.30.1.jar')
    implementation files('libs/google-oauth-client-1.30.1.jar')
    implementation files('libs/google-http-client-1.30.1.jar')
    implementation files('libs/jackson-core-2.9.9.jar')
    implementation files('libs/google-api-client-android-1.30.2.jar')
    implementation files('libs/google-http-client-android-1.30.1.jar')
    implementation files('libs/opencensus-api-0.21.0.jar')
    implementation 'com.google.guava:guava:28.1-jre'
    implementation files('libs/opencensus-contrib-http-util-0.21.0.jar')
    implementation files('libs/grpc-context-1.19.0.jar')
    api files('libs/activation.jar')
    api files('libs/additionnal.jar')
    api files('libs/mail.jar')
    implementation files('libs/google-http-client-gson-1.30.1.jar')
    implementation files('libs/ez-vcard-0.10.5.jar')
    implementation files('libs/vinnie-2.0.2.jar')
    implementation 'com.rfksystems:blake2b:1.0.0'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation files('libs/libsodium-jni-aar-2.0.1-SNAPSHOT.aar')
    /*implementation files('libs/libsodium-jni-release.aar')*/
    /*implementation files('libs/commons-codec-1.9.jar')*/
    implementation files('libs/commons-collections-3.2.2.jar')
    implementation 'com.github.kittinunf.fuel:fuel:1.13.0'
//    implementation 'com.google.android.gms:play-services-base:16.0.1'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'

    implementation 'com.google.firebase:firebase-analytics:16.0.4'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'

    implementation 'com.huawei.hms:push:4.0.3.301'

    implementation 'me.shouheng.compressor:compressor:1.3.5'
//    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.ycjiang:ImagePreview:2.3.5'
    //implementation 'com.github.ihsanbal:LoggingInterceptor:2.0.5'
}

def getSelfDefinedVersion(type) {
    int aa = 1
    int bb = 0
    Process process = "git rev-list --count HEAD".execute()
    process.waitFor()
    int cccc = process.getText().toInteger()

    if ("code".equals(type)) {
        cccc
    } else if ("name".equals(type)) {
        String today = new Date().format("yyMMdd")
        process = "git describe --always".execute()
        process.waitFor()
        String sha1 = process.getText().trim()
        "$aa.$bb.$cccc.$today.$sha1"
    }
}

apply plugin: 'com.google.gms.google-services'

